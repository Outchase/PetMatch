#include <string>

    enum AnimalLabels {
        lDog,
        lCat,
        lRabbit,
        lMonkey,
        lBear,
        lFox,
        lSad,
        lHappy,
        lFlippedCard
    };

class Icons
{

public:


//icons
//label
//ammount
//4x4 grid must be 8 cards

/*std::string arrIcon[lFlippedCard-lDog+1] = {
    "#################\n#               #\n#   ,-.___,-.   #\n#   \\_/_ _\\_/   #\n#     )O_O(     #\n#    { (_) }    #\n#     `-^-'     #\n#               #\n#################\n",
    "#################\n#               #\n#               #\n#    |\\---/|    #\n#    | o_o |    #\n#     \\_^_/     #\n#               #\n#               #\n#################\n",
    "#################\n#               #\n#   __     __   #\n#     \\._./     #\n#    ( o o )    #\n#     \\ Y /     #\n#      \\_/      #\n#               #\n#################\n",
    "#################\n#               #\n#     .=\"=.     #\n#   _/.-.-.\\_   #\n#  ( ( o o ) )  #\n#   |/  \"  \\|   #\n#    \\'---'/    #\n#               #\n#################\n",
    "#################\n# __         __ #\n#/  \\.-\"\"\"-./  \\#\n#\\    -   -    /#\n# |   o   o   | #\n# \\  .-'''-.  / #\n#  '-\\__Y__/-'  #\n#     `---`     #\n#################\n",
    "#################\n#               #\n#               #\n#     ^...^     #\n#    <_* *_>    #\n#      \\_/      #\n#               #\n#               #\n#################\n",
    "#################\n#               #\n#  ####   ####  #\n#  ####   ####  #\n#               #\n#    #######    #\n#  ##       ##  #\n#               #\n#################\n",
    "#################\n#               #\n#  ####   ####  #\n#  ####   ####  #\n#               #\n#  ##       ##  #\n#    #######    #\n#               #\n#################\n",
    "#################\n#       ##      #\n#       ##      #\n#       ##      #\n# ############# #\n#       ##      #\n#       ##      #\n#       ##      #\n#################\n"
    };*/

std::string arrTest[9] = {    "#################", "#       ##      #", "#       ##      #", "#       ##      #", "# ############# #", "#       ##      #", "#       ##      #", "#       ##      #", "#################"};

/*std::string Cat = 
"#################\n"
"#               #\n"
"#               #\n"
"#    |\\---/|    #\n"
"#    | o_o |    #\n"
"#     \\_^_/     #\n"
"#               #\n"
"#               #\n"
"#################\n";

std::string Rabbit = 
"#################\n"
"#               #\n"
"#   __     __   #\n"
"#     \\._./     #\n"
"#    ( o o )    #\n"
"#     \\ Y /     #\n"
"#      \\_/      #\n"
"#               #\n"
"#################\n";

std::string Monkey = 
"#################\n"
"#               #\n"
"#     .=\"=.     #\n"
"#   _/.-.-.\\_   #\n"    
"#  ( ( o o ) )  #\n"   
"#   |/  \"  \\|   #\n"    
"#    \\'---'/    #\n"
"#               #\n"
"#################\n";


std::string Bear = 
"#################\n"
"# __         __ #\n"
"#/  \\.-\"\"\"-./  \\#\n"
"#\\    -   -    /#\n"
"# |   o   o   | #\n"
"# \\  .-'''-.  / #\n"
"#  '-\\__Y__/-'  #\n"
"#     `---`     #\n"
"#################\n";

std::string Fox = 
"#################\n"
"#               #\n"
"#               #\n"
"#     ^...^     #\n"
"#    <_* *_>    #\n" 
"#      \\_/      #\n"
"#               #\n"
"#               #\n"
"#################\n";

std::string SadFace = 
"#################\n"
"#               #\n"
"#  ####   ####  #\n"
"#  ####   ####  #\n"
"#               #\n" 
"#    #######    #\n"
"#  ##       ##  #\n"
"#               #\n"
"#################\n";

std::string SmileyFace = 
"#################\n"
"#               #\n"
"#  ####   ####  #\n"
"#  ####   ####  #\n"
"#               #\n" 
"#  ##       ##  #\n"
"#    #######    #\n"
"#               #\n"
"#################\n";*/
};
